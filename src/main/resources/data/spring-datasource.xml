<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		">

    <!--<bean class="asia.zrc.springDemo.datasource.DynamicDataSource" id="dataSource">-->
        <!--<property name="targetDataSources">-->
            <!--<map key-type="java.lang.String">-->
                <!--<entry value-ref="dataSource_default" key="dataSource_default"></entry>-->
                <!--<entry value-ref="dataSource_outer" key="dataSource_outer"></entry>-->
            <!--</map>-->
        <!--</property>-->
        <!--<property name="defaultTargetDataSource" ref="dataSource_default"/>-->
    <!--</bean>-->

    <!-- 配置sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource_default"></property>
        <property name="configLocation" value="classpath:mybatis/config/configuration.xml"></property>
        <property name="mapperLocations">
            <list>
                <value>classpath:mybatis/mapper/*-mapper.xml</value>
            </list>
        </property>
    </bean>
    <!-- 配置sqlSessionp -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <!-- 指定sqlSessionFactory -->
        <constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
        <!-- 是否支持批量操作 -->
        <!-- <constructor-arg index="1" value="BATCH"></constructor-arg> -->
        <constructor-arg index="1" value="SIMPLE"></constructor-arg>
    </bean>

    <bean id="dao" class="asia.zrc.springDemo.common.DB.impl.Dao">
        <property name="dao" ref="sqlSession"/>
    </bean>


    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource">
            <ref bean="dataSource_default"/>
        </property>
    </bean>
    <!-- 针对全局事务处理的weblogic JTA事务管理器 如果需要全局事务则打开 -->
    <!--
    <bean id="transactionJTAManager" class="org.springframework.transaction.jta.WebLogicJtaTransactionManager">
    </bean>
    -->

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 默认 RuntimeException 将触发事务回滚 非runtimeException 不回滚 -->
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="del*" propagation="REQUIRED"/>
            <tx:method name="query*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:advisor pointcut="execution (* asia.zrc.springDemo..*Service.*(..))" advice-ref="txAdvice"/>
    </aop:config>

</beans>